{% extends 'layouts/app.jinja2' %}
{% import 'macros/detail.jinja2' as detail %}
{% import 'macros/modals.jinja2' as modals %}
{% import 'macros/topbar.jinja2' as topbar %}

{% block title %}Persona {{ persona.rfc }}{% endblock %}

{% block topbar_actions %}
    {% call topbar.page_buttons('Persona ' + persona.rfc) %}
        {{ topbar.button_previous('Personas', url_for('personas.list_active')) }}
        {% if current_user.can_edit('PERSONAS') %}
            {{ topbar.button_edit('Editar', url_for('personas.edit', persona_id=persona.id)) }}
        {% endif %}
        {% if current_user.can_admin('PERSONAS') %}
            {% if persona.estatus == 'A' %}{{ topbar.button_delete('Eliminar', url_for('personas.delete', persona_id=persona.id)) }}{% endif %}
            {% if persona.estatus == 'B' %}{{ topbar.button_recover('Recuperar', url_for('personas.recover', persona_id=persona.id)) }}{% endif %}
        {% endif %}
    {% endcall %}
{% endblock %}

{% block content %}
    <!-- Detalle de la persona -->
    {% call detail.card(estatus=persona.estatus) %}
        {{ detail.label_value_big('RFC', persona.rfc) }}
        {{ detail.label_value('Nombres', persona.nombres) }}
        {{ detail.label_value('Apellido primero', persona.apellido_primero) }}
        {{ detail.label_value('Apellido segundo', persona.apellido_segundo) }}
        {{ detail.label_value('CURP', persona.curp) }}
        {{ detail.label_value('No. empleado', persona.num_empleado) }}
        {% set tabulador_str = 'Puesto ' + persona.tabulador.puesto.clave + ', ' %}
        {% set tabulador_str = tabulador_str + 'Modelo ' + persona.tabulador.modelo | string + ', ' %}
        {% set tabulador_str = tabulador_str + 'Nivel ' + persona.tabulador.nivel | string + ', ' %}
        {% set tabulador_str = tabulador_str + 'Quinquenio ' + persona.tabulador.quinquenio | string %}
        {% if current_user.can_view('TABULADORES') %}
            {{ detail.label_value('Tabulador', tabulador_str, url_for('tabuladores.detail', tabulador_id=persona.tabulador.id)) }}
        {% else %}
            {{ detail.label_value('Tabulador', tabulador_str) }}
        {% endif %}
        {{ detail.label_value('Modelo', persona.modelo) }}
        {{ detail.label_value('Fecha de ingreso gobierno', persona.ingreso_gobierno_fecha) }}
        {{ detail.label_value('Fecha de ingreso P.J.', persona.ingreso_pj_fecha) }}
        {{ detail.label_value('Fecha de nacimiento', persona.nacimiento_fecha) }}
        {{ detail.label_value('Código Postal fiscal', persona.codigo_postal_fiscal) }}
        {{ detail.label_value('Creado', moment(persona.creado, local=True).format('DD MMM YYYY')) }}
    {% endcall %}
    <!-- Cuentas de la persona -->
    {% if current_user.can_view('CUENTAS') %}
        {% call detail.card('Cuentas') %}
            <table id="cuentas_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Banco</th>
                        <th>No. de cuenta</th>
                    </tr>
                </thead>
            </table>
            {% if current_user.can_insert('CUENTAS') %}
            <a href="{{ url_for('cuentas.new_with_persona', persona_id=persona.id) }}" class="btn btn-primary">Agregar</a>
            {% endif %}
        {% endcall %}
    {% endif %}
    <!-- Nominas de la persona -->
    {% if current_user.can_view('NOMINAS') %}
        {% call detail.card('Nominas') %}
            <!-- Filtros Nominas -->
            <div class="row">
                <div class="col">
                    <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosNominas.buscar(); return false;">
                        <div class="col-6">
                            <div class="form-floating">
                                <input id="filtroQuincena" type="text" class="form-control" aria-label="Quincena">
                                <label for="filtroQuincena">Quincena</label>
                            </div>
                        </div>
                        <div class="col-6 text-end">
                            <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosNominas.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                            <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosNominas.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                        </div>
                    </form>
                </div>
            </div>
            <!-- DataTable Nominas -->
            <table id="nominas_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Quincena</th>
                        <th>Centro de T.</th>
                        <th>Plaza</th>
                        <th>Desde</th>
                        <th>Hasta</th>
                        <th>Tipo</th>
                        <th style="text-align:right">Percepcion</th>
                        <th style="text-align:right">Deduccion</th>
                        <th style="text-align:right">Importe</th>
                        <th>No. Cheque</th>
                        <th>F. de Pago</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
    <!-- Percepciones-Deducciones de la persona -->
    {% if current_user.can_view('PERCEPCIONES DEDUCCIONES') %}
        {% call detail.card('Percepciones-Deducciones') %}
        <!-- Filtros Percepciones-Deducciones -->
        <div class="row">
            <div class="col">
                <form class="row g-1 mb-3" id="filtradorForm" onsubmit="filtrosPercepcionesDeducciones.buscar(); return false;">
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroQuincena" type="text" class="form-control" aria-label="Quincena" style="text-transform: uppercase;">
                            <label for="filtroQuincena">Quincena</label>
                        </div>
                    </div>
                    <div class="col-4">
                        <div class="form-floating">
                            <input id="filtroConceptoClave" type="text" class="form-control" aria-label="Concepto" style="text-transform: uppercase;">
                            <label for="filtroConceptoClave">Concepto</label>
                        </div>
                    </div>
                    <div class="col-4 text-end">
                        <button title="Buscar" class="btn btn-primary btn-lg" onclick="filtrosPercepcionesDeducciones.buscar(); return false;" id="button-buscar"><span class="iconify" data-icon="mdi:magnify"></span></button>
                        <button title="Limpiar" class="btn btn-warning btn-lg" type="reset" onclick="filtrosPercepcionesDeducciones.limpiar();" id="button-limpiar"><span class="iconify" data-icon="mdi:broom"></span></button>
                    </div>
                </form>
            </div>
        </div>
            <!-- DataTable Percepciones-Deducciones -->
            <table id="percepciones_deducciones_datatable" class="table display nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Quincena</th>
                        <th>Centro de trabajo</th>
                        <th>Plaza</th>
                        <th>Concepto</th>
                        <th>Concepto descripción</th>
                        <th style="text-align:right">Importe</th>
                    </tr>
                </thead>
            </table>
        {% endcall %}
    {% endif %}
{% endblock %}

{% block custom_javascript %}
    <!-- Constructor de DataTables -->
    <script src="/static/js/datatables-constructor.js"></script>
    <script src="/static/js/datatables-filtros.js"></script>
    <script>
        const constructorDataTable = new ConfigDataTable( '{{ csrf_token() }}' );
    </script>
    <!-- Cuentas de la persona -->
    {% if current_user.can_view('CUENTAS') %}
        <script>
            // DataTable Cuentas
            let configDTCuentas = constructorDataTable.config();
            configDTCuentas['ajax']['url'] = '/cuentas/datatable_json';
            configDTCuentas['ajax']['data'] = { estatus: 'A', persona_id: {{ persona.id }} };
            configDTCuentas['columns'] = [
                { data: 'detalle' },
                { data: 'banco_nombre' },
                { data: 'num_cuenta' }
            ];
            configDTCuentas['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                }
            ];
            $('#cuentas_datatable').DataTable(configDTCuentas);
        </script>
    {% endif %}
    <!-- Nominas de la persona -->
    {% if current_user.can_view('NOMINAS') %}
        <script>
            // DataTable Nominas
            let configDTNominas = constructorDataTable.config();
            configDTNominas['ajax']['url'] = '/nominas/datatable_json';
            configDTNominas['ajax']['data'] = { 'estatus': "A", 'persona_id': {{ persona.id}} };
            configDTNominas['columns'] = [
                { data: 'detalle' },
                { data: 'quincena_clave' },
                { data: 'centro_trabajo_clave' },
                { data: 'plaza_clave' },
                { data: 'desde_clave' },
                { data: 'hasta_clave' },
                { data: 'tipo' },
                { data: 'percepcion' },
                { data: 'deduccion' },
                { data: 'importe' },
                { data: 'num_cheque' },
                { data: 'fecha_pago' }
            ];
            configDTNominas['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: [7, 8, 9], // percepcion, deduccion, importe
                    render: $.fn.dataTable.render.number( ',', '.', 2, '$\t' ),
                    className: "dt-body-right",
                }
            ];
            // Filtros Nominas
            const filtrosNominas = new FiltrosDataTable('#nominas_datatable', configDTNominas);
            filtrosNominas.agregarInput('filtroQuincena', 'quincena_clave');
            filtrosNominas.precargar();
        </script>
    {% endif %}
    {% if current_user.can_view('PERCEPCIONES DEDUCCIONES') %}
        <script>
            // DataTable Percepciones-Deducciones
            let configDTPercepcionesDeducciones = constructorDataTable.config();
            configDTPercepcionesDeducciones['ajax']['url'] = '/percepciones_deducciones/datatable_json';
            configDTPercepcionesDeducciones['ajax']['data'] = { 'estatus': "A", 'persona_id': {{ persona.id}} };
            configDTPercepcionesDeducciones['columns'] = [
                { data: 'detalle' },
                { data: 'quincena_clave' },
                { data: 'plaza_clave' },
                { data: 'centro_trabajo_clave' },
                { data: 'concepto_clave' },
                { data: 'concepto_descripcion' },
                { data: 'importe' }
            ];
            configDTPercepcionesDeducciones['columnDefs'] = [
                {
                    targets: 0, // detalle
                    data: null,
                    render: function(data, type, row, meta) {
                        return '<a href="' + data.url + '">' + data.id + '</a>';
                    }
                },
                {
                    targets: 5, // concepto_descripcion
                    render: function(data, type, row, meta) {
                        if (data.length < 24) {
                            return data;
                        }
                        return '<span title="' + data + '">' + data.substring(0, 24) + '...</span>';
                    }
                },
                {
                    targets: 6, // importe
                    render: $.fn.dataTable.render.number( ',', '.', 2, '$\t' ),
                    className: "dt-body-right",
                }
            ];
            // Filtros Percepciones-Deducciones
            const filtrosPercepcionesDeducciones = new FiltrosDataTable('#percepciones_deducciones_datatable', configDTPercepcionesDeducciones);
            filtrosPercepcionesDeducciones.agregarInput('filtroQuincena', 'quincena_clave');
            filtrosPercepcionesDeducciones.agregarInput('filtroConceptoClave', 'concepto_clave');
            filtrosPercepcionesDeducciones.precargar();
        </script>
    {% endif %}
    <!-- Modales -->
    {% if current_user.can_admin('PERSONAS') %}
        {% if persona.estatus == 'A' %}{{ modals.custom_javascript_delete('Eliminar', '¿Eliminar a ' + persona.rfc + '?') }}{% endif %}
        {% if persona.estatus == 'B' %}{{ modals.custom_javascript_recover('Recuperar', '¿Recuperar a ' + persona.rfc + '?') }}{% endif %}
    {% endif %}
    <!-- Moment.js -->
    {{ detail.moment_js(moment) }}
{% endblock %}
